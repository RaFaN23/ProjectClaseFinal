Index: Proyecto/pizzaapp/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import uuid\r\nfrom datetime import datetime, timezone\r\nfrom django.utils import timezone\r\nfrom django.contrib.auth import authenticate, login, logout\r\nfrom django.shortcuts import render\r\nfrom django.shortcuts import render, redirect\r\nfrom django.shortcuts import render, redirect\r\n\r\nfrom .forms import *\r\nfrom .forms import PizzaForm, RegistroFormulario\r\nfrom .models import cartao, LineaPedido, Pedido, EstadoPedido, EstadoPedidoCamarero\r\nfrom django.shortcuts import render, redirect, get_object_or_404\r\nfrom .models import Mesa\r\nfrom django.shortcuts import render\r\nfrom .models import Usuario\r\n# Create your views here.\r\nfrom django.shortcuts import render\r\nfrom django.http import HttpResponse, HttpResponseForbidden\r\nfrom django.contrib.auth.decorators import user_passes_test\r\nfrom .models import Mesa, EstadoMesa\r\nfrom django.shortcuts import get_object_or_404, redirect\r\nfrom django.shortcuts import redirect, render\r\nfrom .models import Pedido, LineaPedido\r\nimport random\r\nimport string\r\n\r\n\r\ndef solo_admin(view_func):\r\n    return user_passes_test(lambda u: u.is_authenticated and u.rol == 'admin')(view_func)\r\n\r\n\r\ndef solo_camarero_admin(view_func):\r\n    return user_passes_test(lambda u: u.is_authenticated and u.rol == 'camarero' and 'admin')(view_func)\r\n\r\n\r\ndef solo_camarero(view_func):\r\n    return user_passes_test(lambda u: u.is_authenticated and u.rol == 'camarero')(view_func)\r\n\r\n\r\ndef solo_cliente(view_func):\r\n    return user_passes_test(lambda u: u.is_authenticated and u.rol == 'cliente')(view_func)\r\n\r\n\r\ndef solo_camarero_cocinero(view_func):\r\n    return user_passes_test(lambda u: u.is_authenticated and u.rol == 'camarero' or 'cocinero')(view_func)\r\n\r\n\r\ndef go_home(request):\r\n    response = render(request, 'home.html')\r\n    response['Cache-Control'] = 'no-store'\r\n    return response\r\n\r\n\r\ndef go_crearCuenta(request):\r\n    return render(request, 'Crear_Cuenta.html')\r\n\r\n\r\ndef go_registro(request):\r\n    return render(request, 'registro_tarjeta.html')\r\n\r\n\r\ndef go_pedido(request):\r\n    return render(request, 'hacer_pedido.html')\r\n\r\n\r\ndef go_crearCuenta(request):\r\n    return render(request, 'Crear_Cuenta.html')\r\n\r\n\r\ndef go_iniciarSesion(request):\r\n    form = LoginFormulario()\r\n    return render(request, 'InicioSesion.html', {'form': form})\r\n\r\n\r\ndef go_contacto(request):\r\n    return render(request, 'contacto.html')\r\n\r\n\r\ndef contacto_view(request):\r\n    if request.method == 'POST':\r\n        form = PizzaForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()  # Guarda en la base de datos si es ModelForm\r\n            return redirect('gracias')\r\n    else:\r\n        form = PizzaForm()\r\n\r\n    return render(request, 'contacto.html', {'form': form})\r\n\r\n\r\ndef registrar_usuario(request):\r\n    form = RegistroFormulario()\r\n    if request.method == 'POST':\r\n        form = RegistroFormulario(request.POST)\r\n        if form.is_valid():\r\n            usuario_nuevo = form.save(commit=False)  # Guarda en la base de datos si es ModelForm\r\n            usuario_nuevo.set_password(form.cleaned_data['password'])\r\n            usuario_nuevo.save()\r\n            return redirect('InicioSesion')\r\n    else:\r\n        form = RegistroFormulario()\r\n    return render(request, \"Crear_Cuenta.html\", {'form': form})\r\n\r\n\r\ndef login_usuario(request):\r\n    if request.method == 'POST':\r\n        form = LoginFormulario(request, data=request.POST)\r\n        if form.is_valid():\r\n            email = form.cleaned_data.get('username')\r\n            password = form.cleaned_data.get('password')\r\n            usuario = authenticate(request, email=email, password=password)\r\n            if usuario is not None:\r\n                login(request, usuario)\r\n                return redirect('home')\r\n    else:\r\n        form = LoginFormulario()\r\n\r\n    return render(request, 'InicioSesion.html', {'form': form})\r\n\r\n\r\ndef logout_usuario(request):\r\n    logout(request)\r\n    return redirect('InicioSesion')\r\n\r\n\r\ndef go_carta(request):\r\n    lista_carta = cartao.objects.all()\r\n    return render(request, 'carta.html', {'carta': lista_carta})\r\n\r\n\r\n\r\ndef go_formulario_carta(request, id):\r\n    plato = cartao.objects.filter(id=id)\r\n\r\n    if len(plato) == 0:\r\n        nuevo_plato = cartao()\r\n    else:\r\n        nuevo_plato = plato[0]\r\n\r\n    if request.method == 'POST':\r\n\r\n        nuevo_plato.nombre = request.POST['nombre']\r\n        nuevo_plato.ingredientes = request.POST['ingredientes']\r\n        nuevo_plato.precio = request.POST['precio']\r\n        nuevo_plato.imagen = request.POST['imagen']\r\n\r\n        nuevo_plato.save()\r\n        return redirect('carta')\r\n\r\n    else:\r\n        return render(request, 'formularioCarta.html', {'plato': nuevo_plato})\r\n\r\n\r\ndef eliminar_carta(request, id):\r\n    plato_eliminar = cartao.objects.filter(id=id)\r\n    if len(plato_eliminar) != 0:\r\n        plato_eliminar[0].delete()\r\n        return redirect('carta')\r\n\r\n\r\ndef mostrar_mesas(request):\r\n    mesas = Mesa.objects.all().order_by('numero')\r\n    return render(request, 'Mesas.html', {'mesas': mesas})\r\n\r\n\r\n@solo_camarero_admin\r\ndef asignar_mesa(request, mesa_id):\r\n    mesa = get_object_or_404(Mesa, id=mesa_id)\r\n\r\n    if mesa.estado == EstadoMesa.LIBRE:\r\n        mesa.estado = EstadoMesa.OCUPADO\r\n    elif mesa.estado == EstadoMesa.OCUPADO:\r\n        mesa.estado = EstadoMesa.LIBRE\r\n\r\n    mesa.save()\r\n    return redirect('mostrar_mesas')\r\n\r\n\r\n@solo_camarero_admin\r\ndef historial_mesa(request, mesa_id):\r\n    pedidos = Pedido.objects.filter(mesa_id=mesa_id).order_by('-fecha')\r\n    return render(request, 'historial_mesa.html', {'pedidos': pedidos, 'mesa_id': mesa_id})\r\n\r\n\r\ndef add_carrito(request, id):\r\n    carrito = request.session.get('carrito', {})\r\n    carrito[str(id)] = carrito.get(str(id), 0) + 1\r\n    request.session['carrito'] = carrito\r\n    return redirect('carta')\r\n\r\n\r\n\r\ndef ver_carrito(request):\r\n    carrito_ids = request.session.get('carrito', {})\r\n    carrito = {}\r\n    total = 0\r\n    for id, cantidad in carrito_ids.items():\r\n        try:\r\n            producto = cartao.objects.get(id=int(id))\r\n            carrito[producto] = cantidad\r\n            total += producto.precio * cantidad\r\n        except cartao.DoesNotExist:\r\n            continue\r\n    return render(request, 'carrito.html', {'carrito': carrito, 'total': total})\r\n\r\n\r\n\r\ndef go_carrito(request):\r\n    carrito = {}\r\n    total = 0.0\r\n    carrito_session = request.session.get('carrito', {})\r\n\r\n    for k, v in carrito_session.items():\r\n        try:\r\n            producto = cartao.objects.get(id=int(k))\r\n            carrito[producto] = v\r\n            total += producto.precio * v\r\n        except cartao.DoesNotExist:\r\n            continue  # si el producto no existe, lo ignoramos\r\n    return render(request, 'carrito.html', {'carrito': carrito, 'total': total})\r\n\r\n\r\ndef restar_carrito(request, id):\r\n    carrito = request.session.get('carrito', {})\r\n    producto_id = str(id)\r\n\r\n    if producto_id in carrito:\r\n        if carrito[producto_id] > 1:\r\n            carrito[producto_id] -= 1\r\n        else:\r\n            del carrito[producto_id]\r\n\r\n    request.session['carrito'] = carrito\r\n    return redirect('ver_carrito')\r\n\r\n\r\ndef restar_editar(request, id):\r\n    linea_pedido = get_object_or_404(LineaPedido, id=id)\r\n    pedido_id = linea_pedido.pedido.id\r\n\r\n    if linea_pedido.cantidad > 1:\r\n        linea_pedido.cantidad -= 1\r\n        linea_pedido.save()\r\n    else:\r\n        linea_pedido.delete()\r\n\r\n    return redirect('editar_pedido', pk=pedido_id)\r\n\r\n\r\ndef sumar_carrito(request, id):\r\n    carrito = request.session.get('carrito', {})\r\n    producto_id = str(id)\r\n\r\n    carrito[producto_id] = carrito.get(producto_id, 0) + 1\r\n\r\n    request.session['carrito'] = carrito\r\n    return redirect('ver_carrito')\r\n\r\n\r\ndef sumar_editar(request, id):\r\n    linea_pedido = get_object_or_404(LineaPedido, id=id)\r\n    pedido_id = linea_pedido.pedido.id\r\n\r\n    linea_pedido.cantidad += 1\r\n    linea_pedido.save()\r\n\r\n    return redirect('editar_pedido', pk=pedido_id)\r\n\r\n\r\ndef quitar_de_carrito(request, id):\r\n    carrito = request.session.get('carrito', {})\r\n    producto_id = str(id)\r\n\r\n    del carrito[producto_id]\r\n\r\n    request.session['carrito'] = carrito\r\n    return redirect('ver_carrito')\r\n\r\n\r\ndef quitar_editar(request, id):\r\n    linea_pedido = get_object_or_404(LineaPedido, id=id)\r\n    pedido_id = linea_pedido.pedido.id\r\n\r\n    linea_pedido.delete()\r\n\r\n    return redirect('editar_pedido', pk=pedido_id)\r\n\r\n\r\ndef comprar(request):\r\n    nuevo_pedido = cartao()\r\n    nuevo_pedido.codigo = 'CP0001'\r\n    nuevo_pedido.fecha = datetime.now()\r\n    nuevo_pedido.hermano = request.user\r\n\r\n    carrito_session = request.session.get('carrito', {})\r\n\r\n    for k, v in carrito_session.items():\r\n        linea_pedido = LineaPedido()\r\n        producto = cartao.objects.get(id=k)\r\n        linea_pedido.producto = producto\r\n        linea_pedido.precio = producto.precio\r\n        linea_pedido.cantidad = v\r\n        linea_pedido.pedido = nuevo_pedido\r\n        linea_pedido.save()\r\n\r\n    nuevo_pedido.save()\r\n\r\n\r\ndef limpiar(request):\r\n    if 'carrito' in request.session:\r\n        del request.session['carrito']\r\n    request.session.modified = True\r\n    return redirect('ver_carrito')\r\n\r\n\r\n@solo_admin\r\ndef lista_empleados(request):\r\n    empleados = Usuario.objects.all()\r\n    return render(request, 'Gestion_empleados.html', {'empleados': empleados})\r\n\r\n\r\n@solo_admin\r\ndef editar_empleado(request, pk):\r\n    empleado = get_object_or_404(Usuario, pk=pk)\r\n    form = EmpleadoForm(request.POST or None, instance=empleado)\r\n    if request.method == 'POST' and form.is_valid():\r\n        form.save()\r\n        return redirect('Usuarios')\r\n    return render(request, 'editar_empleado.html', {'form': form})\r\n\r\n\r\n@solo_admin\r\ndef borrar_empleado(request, pk):\r\n    empleado = get_object_or_404(Usuario, pk=pk)\r\n    if request.method == 'POST':\r\n        empleado.delete()\r\n        return redirect('Usuarios')\r\n    return render(request, 'confirmar_borrado.html', {'empleado': empleado})\r\n\r\n\r\ndef lista_pedidos(request):\r\n    pedidos = Pedido.objects.all()\r\n    return render(request, 'Gestion_pedidos.html', {'pedidos': pedidos})\r\n\r\n\r\ndef editar_pedido(request, pk):\r\n    pedido = get_object_or_404(Pedido, pk=pk)\r\n    lineas = LineaPedido.objects.filter(pedido=pedido).select_related('producto')\r\n\r\n    total = 0\r\n    for linea in lineas:\r\n        linea.subtotal = linea.cantidad * linea.precio\r\n        total += linea.subtotal\r\n\r\n    if request.method == 'POST':\r\n        form = PedidoForm(request.POST, instance=pedido)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('lista_pedidos')\r\n    else:\r\n        form = PedidoForm(instance=pedido)\r\n\r\n    context = {\r\n        'pedido': pedido,\r\n        'form': form,\r\n        'lineas': lineas,\r\n        'total': total,\r\n    }\r\n    return render(request, 'editar_pedido.html', context)\r\n\r\n\r\ndef borrar_pedido(request, pk):\r\n    pedido = get_object_or_404(Pedido, pk=pk)\r\n    if request.method == 'POST':\r\n        pedido.delete()\r\n        return redirect('lista_pedidos')\r\n    return render(request, 'confirmar_borrado_pedido.html', {'pedido': pedido})\r\n\r\n\r\ndef ver_pedidos_antiguos(request):\r\n    return render(request, 'pedidos_antiguos.html')\r\n\r\n\r\ndef crear_pedido(request):\r\n    carrito = request.session.get('carrito', {})\r\n    if not carrito:\r\n        return redirect('ver_carrito')\r\n\r\n    total = 0\r\n    pedido = Pedido.objects.create(\r\n        codigo=''.join(random.choices(string.ascii_uppercase + string.digits, k=8)),\r\n        fecha=timezone.now(),\r\n        usuario=request.user,\r\n        precio_total=0  # lo actualizamos luego\r\n    )\r\n\r\n    for producto_id, cantidad in carrito.items():\r\n        producto = cartao.objects.get(id=int(producto_id))\r\n        LineaPedido.objects.create(\r\n            pedido=pedido,\r\n            producto=producto,\r\n            cantidad=cantidad,\r\n            precio=producto.precio\r\n        )\r\n        total += producto.precio * cantidad\r\n\r\n    pedido.precio_total = total\r\n    pedido.save()\r\n\r\n    del request.session['carrito']\r\n    return redirect('pedidos_antiguos')\r\n\r\n\r\n\r\n@solo_cliente\r\ndef pedidos_antiguos(request):\r\n    pedidos = Pedido.objects.filter(usuario=request.user).order_by('-fecha')\r\n    return render(request, 'pedidos_antiguos.html', {'pedidos': pedidos})\r\n\r\n\r\n@solo_admin\r\ndef pedidos_todos(request):\r\n    pedidos = Pedido.objects.all().order_by('-fecha')\r\n    return render(request, 'pedidos_todos.html', {'pedidos': pedidos})\r\n\r\n\r\n@solo_camarero_cocinero\r\ndef pedidos_todos(request):\r\n    pedidos = Pedido.objects.all().order_by('-fecha')\r\n    return render(request, 'pedidos_todos.html', {'pedidos': pedidos})\r\n\r\n\r\ndef cambiar_estado_pedido(request, pedido_id):\r\n    pedido = get_object_or_404(Pedido, id=pedido_id)\r\n    if pedido.estado == EstadoPedido.PREPARANDO:\r\n        pedido.estado = EstadoPedido.TERMINADO\r\n    else:\r\n        pedido.estado = EstadoPedido.PREPARANDO\r\n    pedido.save()\r\n    return redirect('pedidos_todos')\r\n\r\n\r\ndef cambiar_estado_pedido_camarero(request, pedido_id):\r\n    pedido = get_object_or_404(Pedido, id=pedido_id)\r\n    if pedido.estado_camarero == EstadoPedidoCamarero.EN_PROCESO:\r\n        pedido.estado_camarero = EstadoPedidoCamarero.FINALIZADO\r\n    else:\r\n        pedido.estado_camarero = EstadoPedidoCamarero.FINALIZADO\r\n    pedido.save()\r\n    return redirect('pedidos_todos')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto/pizzaapp/views.py b/Proyecto/pizzaapp/views.py
--- a/Proyecto/pizzaapp/views.py	(revision ec2988d907ebf09f06763318ba8dd5518a262b34)
+++ b/Proyecto/pizzaapp/views.py	(date 1748009978209)
@@ -182,12 +182,34 @@
     return render(request, 'historial_mesa.html', {'pedidos': pedidos, 'mesa_id': mesa_id})
 
 
-def add_carrito(request, id):
+
+
+
+# views.py
+def add_carrito(request, producto_id):
+    producto = get_object_or_404(cartao, id=producto_id)
+    ...
+
+
+    # Obtén el carrito de la sesión, o crea uno nuevo si no existe
     carrito = request.session.get('carrito', {})
-    carrito[str(id)] = carrito.get(str(id), 0) + 1
+
+    id_str = str(producto.id)
+
+    # Añadir o aumentar la cantidad del producto
+    if id_str in carrito:
+        carrito[id_str]['cantidad'] += 1
+    else:
+        carrito[id_str] = {
+            'nombre': producto.nombre,
+            'precio': producto.precio,
+            'cantidad': 1,
+        }
+
+    # Guardar el carrito actualizado en la sesión
     request.session['carrito'] = carrito
-    return redirect('carta')
 
+    return redirect('carta')  # Puedes cambiar esto por 'ver_carrito' si prefieres
 
 
 def ver_carrito(request):
Index: Proyecto/pizzaapp/url.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom django.urls import path\r\nfrom . import views\r\nfrom pizzaapp.views import *\r\n\r\nurlpatterns = [\r\n\r\n    # HOME\r\n    path('', go_home, name='home_vacio'),\r\n    path('home/', go_home, name='home'),\r\n\r\n    # LOGIN Y REGISTRO\r\n    path('registro_tarjeta/', go_registro, name='registro'),\r\n    path('Crear_Cuenta/', registrar_usuario, name='Crear_Cuenta'),\r\n    path('InicioSesion/', login_usuario, name='InicioSesion'),\r\n    path('cerrarSesion/', logout_usuario, name='cerrarSesion'),\r\n\r\n    # GESTIÓN DE EMPLEADOS\r\n    path('Gestion_Users/', lista_empleados, name='Usuarios'),\r\n    path('empleado/editar/<int:pk>/', editar_empleado, name='editar_empleado'),\r\n    path('empleado/borrar/<int:pk>/', borrar_empleado, name='borrar_empleado'),\r\n\r\n    # PEDIDOS\r\n    path('hacer_pedido/', go_pedido, name='Hacer_Pedido'),\r\n    path('pedidos/', lista_pedidos, name='lista_pedidos'),\r\n    path('pedido/editar/<int:pk>/', editar_pedido, name='editar_pedido'),\r\n    path('pedido/linea/<int:id>/restar/', restar_editar, name='restar_editar'),\r\n    path('editar_pedido/sumar/<int:id>/', sumar_editar, name='sumar_editar'),\r\n    path('editar_pedido/QUITAR/<int:id>/', quitar_editar, name='quitar_editar'),\r\n\r\n    path('pedido/borrar/<int:pk>/', borrar_pedido, name='borrar_pedido'),\r\n    # CONTACTO\r\n    path('contacto/', contacto_view, name='contacto'),\r\n\r\n    # CARTA\r\n    path('carta/', go_carta, name='carta'),\r\n    path('formulario_carta/nuevo/<int:id>', go_formulario_carta, name='formulario_carta'),\r\n    path('formulario_carta/borrar/<int:id>', eliminar_carta, name='eliminar_carta'),\r\n\r\n    # MESAS\r\n    path('mesas/', mostrar_mesas, name='mostrar_mesas'),\r\n    path('asignar/<int:mesa_id>/', asignar_mesa, name='asignar_mesa'),\r\n    path('carta/<int:mesa_id>/', go_carta, name='carta'),\r\n    path('historial_mesa/<int:mesa_id>/', historial_mesa, name='historial_mesa'),\r\n\r\n    # CARRITO\r\n    path('carrito/', ver_carrito, name='ver_carrito'),\r\n    path('add_carrito/<int:producto_id>/', add_carrito, name='add_carrito'),\r\n    path('carrito/sumar/<int:id>/', sumar_carrito, name='sumar_carrito'),\r\n    path('carrito/restar/<int:id>/', restar_carrito, name='restar_carrito'),\r\n    path('carrito/quitar/<int:id>/', quitar_de_carrito, name='quitar_de_carrito'),\r\n    path('carrito/limpiar/', limpiar, name='limpiar'),\r\n    path('completar_compra/', comprar, name='comprar'),\r\n\r\n    # Error\r\n\r\n\r\n    # PEDIDOS\r\n    path('crear_pedido/', crear_pedido, name='crear_pedido'),\r\n    path('peidos_antiguos/', pedidos_antiguos, name='pedidos_antiguos'),\r\n\r\n    path('pedidos_todos/', pedidos_todos, name='pedidos_todos'),\r\n\r\n    path('pedido/<int:pedido_id>/cambiar_estadoCocinero/', cambiar_estado_pedido, name='cambiar_estado_pedido'),\r\n\r\n    path('pedido/<int:pedido_id>/cambiar_estadoCamarero/', cambiar_estado_pedido_camarero, name='cambiar_estado_pedido_camarero'),\r\n\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto/pizzaapp/url.py b/Proyecto/pizzaapp/url.py
--- a/Proyecto/pizzaapp/url.py	(revision ec2988d907ebf09f06763318ba8dd5518a262b34)
+++ b/Proyecto/pizzaapp/url.py	(date 1748009641532)
@@ -38,10 +38,10 @@
     path('formulario_carta/borrar/<int:id>', eliminar_carta, name='eliminar_carta'),
 
     # MESAS
-    path('mesas/', mostrar_mesas, name='mostrar_mesas'),
-    path('asignar/<int:mesa_id>/', asignar_mesa, name='asignar_mesa'),
-    path('carta/<int:mesa_id>/', go_carta, name='carta'),
-    path('historial_mesa/<int:mesa_id>/', historial_mesa, name='historial_mesa'),
+    #  path('mesas/', mostrar_mesas, name='mostrar_mesas'),
+    #  path('asignar/<int:mesa_id>/', asignar_mesa, name='asignar_mesa'),
+  #  path('carta/<int:mesa_id>/', go_carta, name='carta'),
+    # path('historial_mesa/<int:mesa_id>/', historial_mesa, name='historial_mesa'),
 
     # CARRITO
     path('carrito/', ver_carrito, name='ver_carrito'),
Index: Proyecto/templates/carta.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'basehtml.html' %}\r\n{% load static %}\r\n\r\n{% block title %}Inicio{% endblock %}\r\n\r\n{% block extra_css %}\r\n    <link rel=\"stylesheet\" href=\"{% static 'css/carta.css' %}\">\r\n    <link rel=\"stylesheet\" href=\"{% static 'css/navbar.css' %}\">\r\n    <link rel=\"stylesheet\" href=\"{% static 'css/footer.css' %}\">\r\n{% endblock %}\r\n\r\n{% block content %}\r\n\r\n    <div class=\"cuerpo_carta\">\r\n        <div class=\"titulo_carta\"><h2>Carta Del Restaurante</h2></div>\r\n        <div class=\"container text-center\">\r\n            <div class=\"row\">\r\n                {% for c in carta %}\r\n                    <div class=\"col-md-4 mb-4\">\r\n                        <div class=\"card h-100\">\r\n                            <img src=\"{{ c.imagen }}\" class=\"card-img-top ajustes_foto\" alt=\"\">\r\n                            <div class=\"editar_carta card-body\">\r\n                                <h5 class=\"card-title\">{{ c.nombre }}</h5>\r\n                                <p class=\"card-text\">{{ c.ingredientes }}</p>\r\n                                <p class=\"card-text fw-bold\">{{ c.precio }} €</p>\r\n                            </div>\r\n                            {% if user.rol == 'admin' %}\r\n                                <div class=\"botonescosas\">\r\n                                    <button class=\"editar_eliminar\">\r\n                                        <a class=\"enlace_formulario_carta colorboton\"\r\n                                           href=\"{% url 'formulario_carta' id=c.id %}\">Editar</a>\r\n                                    </button>\r\n                                    <button class=\"editar_eliminar\">\r\n                                        <a class=\"enlace_formulario_carta colorboton\"\r\n                                           href=\"{% url 'eliminar_carta' id=c.id %}\">eliminar</a>\r\n                                    </button>\r\n                                   \r\n\r\n                                </div>\r\n                            {% endif %}\r\n                            {% if user.rol == 'cliente' or user.rol == 'camarero' %}\r\n                                <form method=\"post\" action=\"{% url 'add_carrito' c.id %}\">\r\n                                    {% csrf_token %}\r\n                                    <button type=\"submit\">Añadir al carrito</button>\r\n                                </form>\r\n                            {% endif %}\r\n                        </div>\r\n                    </div>\r\n                {% endfor %}\r\n            </div>\r\n\r\n            {% if user.rol == 'admin' %}\r\n                <button class=\"boton-añadir\">\r\n                    <a class=\"enlace_formulario_carta\" href=\"{% url 'formulario_carta' id=0 %}\">Añadir</a>\r\n                </button>\r\n            {% endif %}\r\n            {% if user.rol == 'cliente' %}\r\n                <button class=\"boton-añadir\">\r\n                    <a class=\"enlace_formulario_carta\" href=\"{% url 'carrito'  %}\">Ver Carrito</a>\r\n                </button>\r\n            {% endif %}\r\n        </div>\r\n    </div>\r\n\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Proyecto/templates/carta.html b/Proyecto/templates/carta.html
--- a/Proyecto/templates/carta.html	(revision ec2988d907ebf09f06763318ba8dd5518a262b34)
+++ b/Proyecto/templates/carta.html	(date 1748009724503)
@@ -56,7 +56,7 @@
             {% endif %}
             {% if user.rol == 'cliente' %}
                 <button class="boton-añadir">
-                    <a class="enlace_formulario_carta" href="{% url 'carrito'  %}">Ver Carrito</a>
+                    <a class="enlace_formulario_carta" href="{% url 'ver_carrito'  %}">Ver Carrito</a>
                 </button>
             {% endif %}
         </div>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f6300454-35ea-4f74-81eb-b0dd0fe99bd2\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Proyecto/pizzaapp/url.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Proyecto/pizzaapp/url.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Proyecto/pizzaapp/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Proyecto/pizzaapp/views.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Proyecto/templates/carrito.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Proyecto/templates/carrito.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;massimo092&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/RaFaN23/ProjectClaseFinal.git&quot;,\r\n    &quot;accountId&quot;: &quot;0000970a-105e-45ad-a370-5424ac2519d3&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2vY4kfZVJvTYjrnuzqAKosDhcWf\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"DefaultHtmlFileTemplate\": \"HTML File\",\r\n    \"Django Server.ProjectClaseFinal.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenDjangoStructureViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"django.template.preview.state\": \"SHOW_EDITOR_AND_PREVIEW\",\r\n    \"git-widget-placeholder\": \"RamaMassi\",\r\n    \"last_opened_file_path\": \"C:/Users/maxtr/Documents/GitHub/ProjectClaseFinal0\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"DatabaseDriversLRU\": [\r\n      \"oracle\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"ProjectClaseFinal\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"ProjectClaseFinal\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"localhost\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.26775.22\" />\r\n        <option value=\"bundled-python-sdk-9f73701ac511-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.26775.22\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f6300454-35ea-4f74-81eb-b0dd0fe99bd2\" name=\"Changes\" comment=\"\" />\r\n      <created>1744308818585</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1744308818585</updated>\r\n      <workItem from=\"1744308819647\" duration=\"18000\" />\r\n      <workItem from=\"1745419563068\" duration=\"20000\" />\r\n      <workItem from=\"1747586584687\" duration=\"35000\" />\r\n      <workItem from=\"1747586639532\" duration=\"2709000\" />\r\n      <workItem from=\"1747593337920\" duration=\"4952000\" />\r\n      <workItem from=\"1747666732134\" duration=\"2156000\" />\r\n      <workItem from=\"1747600655117\" duration=\"2937000\" />\r\n      <workItem from=\"1747694299172\" duration=\"2132000\" />\r\n      <workItem from=\"1747747602260\" duration=\"1359000\" />\r\n      <workItem from=\"1747771739335\" duration=\"1605000\" />\r\n      <workItem from=\"1747775639768\" duration=\"103000\" />\r\n      <workItem from=\"1747775821443\" duration=\"286000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ec2988d907ebf09f06763318ba8dd5518a262b34)
+++ b/.idea/workspace.xml	(date 1748009884477)
@@ -8,7 +8,7 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Proyecto/pizzaapp/url.py" beforeDir="false" afterPath="$PROJECT_DIR$/Proyecto/pizzaapp/url.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Proyecto/pizzaapp/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/Proyecto/pizzaapp/views.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Proyecto/templates/carrito.html" beforeDir="false" afterPath="$PROJECT_DIR$/Proyecto/templates/carrito.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Proyecto/templates/carta.html" beforeDir="false" afterPath="$PROJECT_DIR$/Proyecto/templates/carta.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,7 +65,7 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "django.template.preview.state": "SHOW_EDITOR_AND_PREVIEW",
-    "git-widget-placeholder": "RamaMassi",
+    "git-widget-placeholder": "master",
     "last_opened_file_path": "C:/Users/maxtr/Documents/GitHub/ProjectClaseFinal0",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
